<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Version>2.2.0</Version>
    <Authors>Grzegorz Gałęzowski; Andrey Tsvetkov; William Cassarin</Authors>
    <PackageId>Core.Maybe</PackageId>
    <Copyright>Andrey Tsvetkov; William Cassarin 2015, Grzegorz Gałęzowski 2020</Copyright>
    <Company>Core.Maybe</Company>
    <Description>Option types for C# with LINQ support and rich fluent syntax for many popular uses:

		var maybeOne = "one".ToMaybe();
		Maybe&lt;string&gt; maybeAnother;

		var maybeBoth = 
			from one in maybeOne
			from another in maybeAnother
			select one + another;

		maybeBoth.Match(
			both =&gt; Console.WriteLine("Result is: {0}", both), 
			@else: () =&gt; Console.WriteLine("Result is Nothing, as one of the inputs was Nothing")
		);</Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageTags>option, maybe, linq, fluent, functional</PackageTags>
    <Product>Option types for C# with LINQ support and rich fluent syntax for many popular uses</Product>
    <RepositoryUrl>https://github.com/grzesiek-galezowski/core-maybe</RepositoryUrl>
    <Nullable>enable</Nullable>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageLicenseFile>License.txt</PackageLicenseFile>
    <RootNamespace>Core</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Nullable" Version="1.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\License.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
